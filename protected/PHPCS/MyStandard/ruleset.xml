<?xml version="1.0"?>
<ruleset name="SkiliksStandard">
 <description>The MySource coding standard builds on the Squiz coding standard. Currently used for MySource Mini development.</description>

 <exclude-pattern>*/tests/*</exclude-pattern>
 <exclude-pattern>*/PHPCS/*</exclude-pattern>
 <exclude-pattern>*/assets/*</exclude-pattern>

 <!-- Include the whole Squiz standard except FunctionComment, which we override -->
 <rule ref="Generic.WhiteSpace.DisallowTabIndent.TabsUsed" />
 <rule ref="Generic.Classes.DuplicateClassName" />
 <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
 <!-- rule ref="Generic.Commenting.Todo"/-->
 <!--rule ref="Generic.ControlStructures.InlineControlStructure"/-->
 <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
 <!--rule ref="Generic.Formatting.SpaceAfterCast"/-->
 <!-- rule ref="Generic.Functions.FunctionCallArgumentSpacing"/ -->
 <rule ref="Generic.NamingConventions.ConstructorName"/>
 <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>
 <rule ref="Generic.PHP.DeprecatedFunctions"/>
 <rule ref="Generic.PHP.DisallowShortOpenTag"/>
 <rule ref="Generic.Strings.UnnecessaryStringConcat"/>
 <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>
 <rule ref="Generic.WhiteSpace.ScopeIndent"/>
 <rule ref="PEAR.ControlStructures.MultiLineCondition"/>
 <rule ref="PEAR.Files.IncludingFile"/>
 <rule ref="PEAR.Formatting.MultiLineAssignment"/>
 <rule ref="Zend.Debug.CodeAnalyzer"/>
</ruleset>
